#!/usr/bin/perl

# XFdrake
# Copyright (C) 1999-2006 Mandriva (pixel@mandrakesoft.com)
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

use lib qw(/usr/lib/libDrakX);

# i18n: IMPORTANT: to get correct namespace (drakx-kbd-mouse-x11 instead of libDrakX)
BEGIN { unshift @::textdomains, 'drakx-kbd-mouse-x11' }

use standalone;     #- warning, standalone must be loaded very first, for 'explanations'

use Xconfig::main;
use Xconfig::xfree;
use Xconfig::default;
use interactive;
use modules;
use common;
use any;
use c;

my ($configure_this) = grep { !/^-/ } @ARGV;
$configure_this = 'resolution' if $0 =~ /Xdrakres/;
$configure_this ||= $::auto ? 'auto_install' : 'everything';

{ 
    my $in = 'interactive'->vnew('su');

    my $rc = do {
	my $options = { allowFB => listlength(cat_("/proc/fb")) };

	if ($configure_this eq 'everything') {
	    check_XFree($in);
	    my ($_raw_X, $rc) = Xconfig::main::configure_everything_or_configure_chooser($in, $options, $::auto);
	    $rc;
	} elsif ($configure_this eq 'auto_install') {
	    Xconfig::main::configure_everything_auto_install(Xconfig::default::configure($in->do_pkgs), $in->do_pkgs, {}, $options);
	} elsif ($configure_this eq 'monitor') {
	    Xconfig::main::configure_monitor($in);
	} elsif ($configure_this eq 'resolution') {
	    Xconfig::main::configure_resolution($in);
	}
    };
    if (!$::auto) {
	if ($rc =~ /need_xrandr(.*)/) {
	    my $opts = $1;
	    my $before = `xrandr`;
	    run_program::run('xrandr', split(' ', $opts));
	    my $after = `xrandr`;
	    if ($before eq $after) {
		log::l("xrandr $opts failed, defaulting to ask_for_X_restart");
		any::ask_for_X_restart($in);
	    }
	} elsif ($rc eq 'need_restart') {
	    any::ask_for_X_restart($in);
	} elsif ($rc eq 'need_reboot') {
	    $in->ask_warn('', N("You need to reboot for changes to take effect"));
	}
    }

    $in->exit($rc ? 0 : 1);
}

sub check_XFree {
    my ($in) = @_;

    # FIXME: drop this very old useless block in mga3
    #- set the standard configuration
#    {
#	my $f = "/etc/X11/xorg.conf";
#	symlinkf("xorg.conf.standard", $f) if -l $f && -e "$f.standard";
#   }

    $in->do_pkgs->ensure_are_installed(['task-x11']) or $in->exit;

    system("mount /proc 2>/dev/null"); # ensure /proc is mounted for pci probing
}
